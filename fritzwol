#!/usr/bin/perl

use strict;
use warnings;
use LWP::UserAgent;
use Encode;
use Digest::MD5 qw(md5_hex);
use Config::Simple;
use Term::ReadKey;

my $ua = LWP::UserAgent->new;

sub getRequiredParam {
    my $scfg = shift;
    my $paramName = shift;

    my $value = $scfg->param($paramName);
    if(!$value) {
        printf("no value found for %s\n", $paramName);
        exit 1;
    } else {
        return $value;
    }
}

my $cfg_path = $ENV{"HOME"} . "/.fritzwolconfig";
if( ! -e $cfg_path) {
    printf("Config file not found in %s\nRefer to https://github.com/sbungartz/fritzwol on how to set up your config.\n", $cfg_path);
    exit 1;
}
if (!$ARGV[0]) {
    printf("Usage: fritzwol <hostname>\n");
    printf("  Configure Fritz!Box URL and Host mac address in ~/.fritzwolconfig\n");
    exit 1;
}
my $cfg = new Config::Simple($cfg_path);
my $target = "host:$ARGV[0]";

my $mac = getRequiredParam($cfg, "$target.mac");
my $box_id = getRequiredParam($cfg, "$target.box");

my $box = "box:$box_id";
my $url = getRequiredParam($cfg, "$box.url");
my $port = getRequiredParam($cfg, "$box.port");
my $remote_user = $cfg->param("$box.user");
my $cert_file = $cfg->param("$box.certfile");
my $remote_pass;
my $local_admin_pass = '';

# disable ssl certificate verification
$ua->ssl_opts(verify_hostname => 0, SSL_verify_mode => 0);

sub err_exit($) {
    my $msg = shift;
    print "[error] $msg\n";
    exit 1;
}

if (!$remote_user) {
    printf("username for %s at %s: ", $box_id, $url);
    chomp($remote_user = ReadLine(0));
}

ReadMode('noecho');
printf("password for %s at %s: ", $box_id, $url);
chomp($remote_pass = ReadLine(0));
ReadMode('restore');

print "\n";
print "logging in...\n";

$ua->timeout(30);
push @{$ua->requests_redirectable}, 'POST';
$ua->credentials($url.":".$port, "HTTPS Access", $remote_user, $remote_pass);

my $url_base = "https://".$url.":".$port;
my $url_login = $url_base."/login.lua";
my $url_wakeup = $url_base."/cgi-bin/webcm";

my $r = $ua->get($url_login);
if ($r->is_success) {
    my $c = $r->decoded_content;
    if ($c =~ m#(?:g_challenge|var challenge|\["security:status/challenge"\]) = "([a-f0-9]+)"#) {
        my $challenge = $1;
        my $pass = ($c =~ m#Benutzername#) ? $remote_pass : $local_admin_pass;
        my %data = (
            username => $remote_user,
            response => sprintf "%s-%s", $challenge, md5_hex(encode("UTF16-LE", sprintf "%s-%s", $challenge, $pass))
        );
        $r = $ua->post($url_login, \%data);
        $c = $r->decoded_content;
        err_exit "login failed" if ($c =~ m#(?:error_text|ErrorMsg)#i);
        if ($c =~ m#(?:home|logout)\.lua\?sid=([a-f0-9]+)#) {
            print "requesting wakeup...\n";
            my $sid = $1;
            %data = (sid => $sid, "wakeup:settings/mac" => $mac);
            $r = $ua->post($url_wakeup, \%data);
            if ($r->is_success) {
                print "[success] wakeup done\n";
            } else {
                err_exit $r->status_line;
            }
        } else {
            err_exit "could not find a session id";
        }
    } else {
        err_exit "could not find a challenge";
    }
} else {
    err_exit "could not load login page: " . $r->status_line;
}

exit 0;
